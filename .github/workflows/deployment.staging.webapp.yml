name: remote-config-deployer

on: [push]

jobs:
  deploy:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        if: inputs.mobileapp_build_number == ''
        with:
          fetch-depth: 0


      # build number is defined by latest tag number on github.
      # In IOS,     it would be CFBundleVersion in Info.plist
      # In Android, it would be build_number in pubspec.yaml
      - name: Set mobileapp build number
        if: inputs.mobileapp_build_number == ''
        run: |
          LATEST_MOBILEAPP_BUILD_NUMBER_TAG=$(git ls-remote --tags origin "mobileapp-ios-b*" | awk '{print $2}' | sort -V | tail -n 1)
          MOBILEAPP_BUILD_NUMBER=$(($(echo "$LATEST_MOBILEAPP_BUILD_NUMBER_TAG" | sed "s/^refs\/tags\/mobileapp-ios-b//") + 1))
          echo "MOBILEAPP_BUILD_NUMBER=$MOBILEAPP_BUILD_NUMBER" >> $GITHUB_ENV

      - name: Push mobileapp build number tag
        if: inputs.mobileapp_build_number == ''
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/mobileapp-ios-b${{ env.MOBILEAPP_BUILD_NUMBER }}',
              sha: context.sha
            })

      - name: Push mobileapp version tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ env.MOBILEAPP_TAG_PREFIX }}',
              sha: context.sha
            })

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.10.5
          channel: "stable"
          cache: true
          cache-key: flutter-3.10.5
          cache-path: ${{ runner.tool_cache }}/flutter-3.10.5
          architecture: x64

      - name: Config app environments
        run: |
          sed -i '' "s/^version: .*/version: ${{ env.MOBILEAPP_VERSION }}/" packages/app_user/pubspec.yaml

      - name: Setup Ruby environment
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler-cache: true

      - uses: actions/cache@v3
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('packages/app_user/scripts/remote_config/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          cd packages/app_user/scripts/remote_config/
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt ; fi
      - name: Create service account key
        env:
          FB_SERVICE_ACCOUNT_BASE64: ${{ secrets.FB_KEY }}
        run: |
          cd packages/app_user/scripts/remote_config/
          touch fb_credential.json
          echo -n "$FB_SERVICE_ACCOUNT_BASE64" | base64 --decode --output fb_credential.json
      - name: Publish
        env:
          PROJECT_ID: medica-test
          CREDENTIALS: fb_credential.json
          PLATFORM_APP: ios
          VERSION_APP: 1.1.10.2
        run: |
          cd packages/app_user/scripts/remote_config/
          python config_manager.py --action=publish
